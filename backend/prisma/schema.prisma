// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  COMPANY
}

enum Gender {
  MALE
  FEMALE
  UNSPECIFIED
}

model User {
  userId       String   @id @default(uuid())
  username     String   @unique
  password     String
  role         Role
  email        String   @unique
  registeredAt DateTime @default(now())

  company  Company[]
  customer Customer[]
}

model Company {
  companyId           Int      @id @default(autoincrement())
  companyName         String
  companyRegistration String
  imageCompany        String
  imageCompanyUrl     String
  imageContents       String[]
  imageContentUrls    String[]
  body                String
  address             String
  sub_district        String
  district            String
  province            String
  postCode            String
  contact             String
  // rateprice        Int
  tag                 String[]

  userCompany User   @relation(fields: [userId], references: [userId])
  userId      String @unique

  // engineer  Engineer[]
  portfolioBy Portfolio[]
}

// model Engineer {
//   engineerId Int    @id @default(autoincrement())
//   role       String
//   firstname  String
//   lastname   String
//   licenseNo  String @unique

//   company   Company @relation(fields: [companyId], references: [companyId])
//   companyId Int
// }

model Portfolio {
  portId           Int      @id @default(autoincrement())
  imageContents    String[]
  imageContentUrls String[]
  title            String
  body             String
  tag              String[]
  province         String
  district         String
  sub_district     String
  address          String
  postCode         String
  createAt         DateTime
  updateAt         DateTime

  postedBy  Company            @relation(fields: [companyId], references: [companyId])
  companyId Int
  commentBy CommentPortfolio[]
}

model CommentPortfolio {
  commentId Int      @id @default(autoincrement())
  massage   String
  rating    Int
  userId    String
  createAt  DateTime @default(now())
  updateAt  DateTime @default(now())

  portfolio Portfolio @relation(fields: [portId], references: [portId])
  portId    Int
}

model Customer {
  customerId   Int      @id @default(autoincrement())
  firstname    String
  lastname     String
  gender       Gender
  dateOfBirth  DateTime @db.Date
  citizenId    String   @unique
  province     String
  district     String
  sub_district String
  address      String
  contact      String
  postCode     Int

  userCustomer User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userId       String @unique

  blog Blog[]
}

model Blog {
  blogId       Int      @id @default(autoincrement())
  title        String
  body         String
  tag          String[]
  province     String
  district     String
  sub_district String
  address      String
  createAt     DateTime @default(now())
  updateAt     DateTime @default(now())

  customer   Customer @relation(fields: [customerId], references: [customerId], onDelete: Cascade)
  customerId Int
}
